{
	"info": {
		"_postman_id": "537baa22-afc3-4f65-b231-50572dcd53eb",
		"name": "acumer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22927035",
		"_collection_link": "https://dewoloper.postman.co/workspace/dewo~9f34982c-dde5-4f77-9d5d-46872ed07d4a/collection/22927035-537baa22-afc3-4f65-b231-50572dcd53eb?action=share&source=collection_link&creator=22927035"
	},
	"item": [
		{
			"name": "Events",
			"item": [
				{
					"name": "Register Notif",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"producer_info\": {\n    //     \"info\":{\n    //         \"notif_receiver\": { \"id\": 1 },\n    //         \"notif_data\": { \n    //             \"id\": \"unqie-id\",\n    //             \"action_data\": {\n    //                 \"pid\": 200\n    //             }, \n    //             \"actioner_info\": \"wildonion is purchasing the product\", \n    //             \"action_type\": \"ProductPurchased\", \n    //             \"fired_at\": 1714316645, \n    //             \"is_seen\": false\n    //         }, \n    //         \"exchange_name\": \"wildonionExchange\",\n    //         \"exchange_type\": \"topic\", // amq.topic for pubsub\n    //         \"routing_key\": \"accept.only.*\" // routing pattern or key\n    //     }\n    // },\n    \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"Events:LocationEvent\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{events-v1}}/location/register",
							"host": [
								"{{events-v1}}"
							],
							"path": [
								"location",
								"register"
							]
						},
						"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
					},
					"response": []
				},
				{
					"name": "Get Basic Reports",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"producer_info\": {\n    //     \"info\":{\n    //         \"notif_receiver\": { \"id\": 1 },\n    //         \"notif_data\": { \n    //             \"id\": \"unqie-id\",\n    //             \"action_data\": {\n    //                 \"pid\": 200\n    //             }, \n    //             \"actioner_info\": \"wildonion is purchasing the product\", \n    //             \"action_type\": \"ProductPurchased\", \n    //             \"fired_at\": 1714316645, \n    //             \"is_seen\": false\n    //         }, \n    //         \"exchange_name\": \"wildonionExchange\",\n    //         \"exchange_type\": \"amq.topic\", // amq.topic for pubsub\n    //         \"routing_key\": \"accept.only.*\" // routing pattern or key\n    //     }\n    // },\n    \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"Events:LocationEvent\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{events-v1}}/location/stats/get/basic/?imei=0358899055298281&from=0001-01-01T00:00:00&to=0001-01-01T00:00:00",
							"host": [
								"{{events-v1}}"
							],
							"path": [
								"location",
								"stats",
								"get",
								"basic",
								""
							],
							"query": [
								{
									"key": "imei",
									"value": "0358899055298281"
								},
								{
									"key": "from",
									"value": "0001-01-01T00:00:00"
								},
								{
									"key": "to",
									"value": "0001-01-01T00:00:00"
								}
							]
						},
						"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Mint Demo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pid\": 1,\n    \"is_minted\": false,\n    \"buyer_id\": \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{health-v1}}/mint-demo",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								"mint-demo"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "events-v1",
			"value": "http://localhost:2344/v1/events",
			"type": "string"
		},
		{
			"key": "health-v1",
			"value": "http://localhost:2344/v1/health",
			"type": "string"
		}
	]
}